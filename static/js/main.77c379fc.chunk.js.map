{"version":3,"sources":["data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Box","styled","div","BoxTitle","h6","props","shoesColor","Alert","className","Info","재고","Detail","useState","alert","setAlert","useEffect","Timer","setTimeout","clearTimeout","history","useHistory","useParams","찾은상품","shoes","find","상품","src","width","inventory","onClick","inventory변경","goBack","Product","i","App","shoesData","changeShoes","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","style","maxHeight","navbarScroll","Link","to","as","Form","FormControl","type","placeholder","aria-label","Button","variant","exact","path","Carousel","Item","alt","Caption","size","map","a","axios","get","then","result","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77c379fc.chunk.js","sourcesContent":["export default   \r\n[\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n  ] ","import React, { useEffect, useState } from 'react'; //component 파일 따로만들때 import react 태그 필수\r\nimport { useHistory, useParams } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\n\r\n\r\n/**컴포넌트로 css스타일링 */\r\nlet Box = styled.div `padding: 20px;  text-align: center; margin: 0 auto;`;\r\nlet BoxTitle = styled.h6 `\r\nfont-size: 2rem; \r\ncolor: ${props=> props.shoesColor}\r\n`;\r\n\r\n\r\nfunction Detail(props){\r\n\r\n let [alert, setAlert] = useState(true);\r\n let [inputData, inputChange] = useState('');\r\n\r\n  useEffect(()=>{ //hook기능 효과추가하는 기능\r\n   let Timer = setTimeout(()=>{ setAlert(false)}, 2000); //2초후에, 재고 알림창 사라지게\r\n   return ()=> { clearTimeout (Timer)} //타이머 해제시킴\r\n  }, [] ); //젤 마지막 빈칸 [] = 한번 로딩됬을때만 실행하기\r\n\r\n\r\n   let history = useHistory();  //방문기록등을 다 저장해놓는 object명\r\n   let { id } = useParams();\r\n   let 찾은상품 = props.shoes.find(function(상품){  //나중에 상품정렬 숫자가 바뀌어도, url경로가 뜨도록 find를쓴다 (아직 이부분 잘 이해안됨)  \r\n    /** 상품 => 상품.id == id */\r\n    return 상품.id == id   \r\n  });\r\n\r\n\r\n\r\n    return(\r\n\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Box>\r\n          <BoxTitle shoesColor={'blue'}>HOT SALES</BoxTitle>\r\n        </Box>\r\n\r\n     \r\n        {  alert === true ? <Alert/> : null }\r\n       \r\n\r\n        <div className=\"col-md-6\">\r\n          <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n          <p>{찾은상품.content}</p>\r\n          <p>{찾은상품.price}원</p>\r\n\r\n          <Info 재고={props.inventory}></Info>\r\n\r\n          <button className=\"btn btn-danger\" onClick={()=>{\r\n            //주문했을때 재고량에서 -1 빼서 보여지게 하기\r\n          props.inventory변경([9,10,11])\r\n          }}>주문하기</button> \r\n\r\n          <button className=\"btn btn-secondary\" onClick={()=>{\r\n              history.goBack();   //history 변수 만든후에, 뒤로가기 object를 입력하면 됨\r\n              {/**ex :  history.push('/경로명') => 특정경로url로 이동하기 가능 */}\r\n          }}>뒤로가기</button> \r\n        </div>\r\n      </div>\r\n   </div> \r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Alert(){\r\n  return(\r\n    <div className=\"my-alert-yellow\" >\r\n    <p>재고가 1개 남았습니다</p>\r\n  </div>\r\n  \r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Info(props){\r\n  return(\r\n   <p>현재 재고는 {props.재고[0]}개 남아있습니다</p>\r\n  )\r\n}\r\n\r\nexport default Detail;","\nimport React, { useState } from 'react'; \nimport {Navbar, Nav,Form,FormControl,Button,Carousel} from 'react-bootstrap';  //부트스트랩에서 사용할 태그  상단에 다 긁어와야 쓸수있음 \nimport './App.css';\nimport shoesData from './data.js'; //Json 형식의 데이터 파일 불러오기\nimport { Link, Route, Switch} from 'react-router-dom'; //라우팅 태그 불러오기\nimport axios from 'axios';  //Ajax파일 설치\nimport Detail from './Detail.js'; \n\nfunction App() {\n\n  let [shoes, changeShoes] = useState(shoesData); //Json 형식의 데이터파일 쪼개서 불러오기, API쓴것 처럼 일일이 불러올수있다\n  //중요한 데이터들은 최상위 App() 컴포넌트 안에 보관하자!!\n\n  let [inventory, inventory변경] = useState([10,11,12]); //갯수 10, 11, 12 개 있다고 그냥 대충 만들기\n\n  let [load, changeLoad] = useState(true);\n\n  return (\n<div className=\"App\">\n\n<Navbar bg=\"light\" expand=\"lg\">\n  <Navbar.Brand href=\"#\">LOGO</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"navbarScroll\" />\n  <Navbar.Collapse id=\"navbarScroll\">\n    <Nav\n      className=\"mr-auto my-2 my-lg-0\"\n      style={{ maxHeight: '100px' }}\n      navbarScroll>\n      <Nav.Link > <Link to=\"/\">HOME</Link> </Nav.Link> {/***link to=\"\" 라우터를 이용한 링크달기 */}\n      <Nav.Link as ={Link} to=\"/Detail\"> Detail </Nav.Link>\n    </Nav>\n    <Form className=\"d-flex\">\n      <FormControl\n        type=\"search\"\n        placeholder=\"Search\"\n        className=\"mr-2\"\n        aria-label=\"Search\"\n      />\n      <Button variant=\"outline-success\">Search</Button>\n    </Form>\n  </Navbar.Collapse>\n</Navbar>\n    \n\n\n\n<Switch> {/**router여러개 있을때 한페이지에 중복되지않고, 1개의 라우터만 보여준다 */}\n\n<Route exact path=\"/\"> \n{ //메인페이지 라우트\n/**메인페이지 해당하는 주소  단, extact 라는 걸 추가하면 정확한 주소가 일치해야지 페이지 뜬다 아니면 겹치는거 다 띄워버림*/}\n\n\n<Carousel>\n  <Carousel.Item className=\"bg\">\n    <img\n      className=\"d-block w-100\"\n      src=\"/feather.jpg\"\n      alt=\"1slide\"\n    />\n    \n    <Carousel.Caption>\n      <h3>1슬라이드</h3>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n      <Button variant=\"warning\" size=\"lg\">View More</Button>\n    </Carousel.Caption>\n  </Carousel.Item>\n\n  <Carousel.Item className=\"bg\">\n    <img\n      className=\"d-block w-100 bg\"\n      src=\"/sunset.jpg\"\n      alt=\"2slide\"\n    />\n\n    <Carousel.Caption>\n      <h3>2 슬라이드</h3>\n      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n      <Button variant=\"warning\" size=\"lg\">View More</Button>\n    </Carousel.Caption>\n  </Carousel.Item>\n</Carousel>\n\n\n<div className=\"container\">\n  <div className=\"row\">\n\n  \n{shoes.map((a,i)=>{  \n  /**1. 3개 컴포넌트 반복문 만들기 ; shoes의 array안의 모든 갯수만큼 map반복 */\n  /**2. map(a,i)에서 \n   * a의미 : shoes안에 있던 하나하나의 데이터 \n   * i의 의미 : 0,1,2,3... 무한으로 반복 숫자\n  */\n  return(\n    <Product shoes={shoes[i]} i={i} key={i}></Product> \n     /** * 즉, (a,i)는 shoes안의 하나하나 데이터를 무한으로 반복하라는 뜻 */\n     /**i를 넣은건 이미지 숫번데로 띠우기 위해 props를 만든것 */\n     /**반복문 만들떄 key={} 필수 */\n  );\n})}\n\n  </div>\n </div>\n\n<button className=\"btn btn-primary\" onClick={()=>{\n \n  //load === true ? <Loading></Loading> : null;\n\n  axios.get( 'https://codingapple1.github.io/shop/data2.json' )/**AJAX : 이안에 데이터 요청할 url이와야함 */\n  .then((result)=>{\n\n  \n    changeShoes( [...shoes, ...result.data] );  // [...000 ] array의 복사본, shoes라는 state에 자료 추가\n  })\n\n  .catch(()=>{ /**이 안에는 요청실패시 실행할코드 */ })\n\n}}>View More</button>\n\n</Route>\n\n\n\n{/**여기서는 디테일 페이지**/}\n<Route  path=\"/detail/:id\"> {/**:id는 콜론뒤에는 아무문자나 받겠다는 url작명법 */}\n{ /**경로뒤에 /detail 는 해당하는 주소 */}\n\n  <Detail shoes={shoes} inventory={inventory} inventory변경={inventory변경}  /**props를 쓴 자식요소에 넘겨주는중 */></Detail>\n\n</Route>\n\n\n</Switch>\n\n</div>\n  )\n}\n\n\n/**상품 컴포넌트 만들기 */\nfunction Product(props){\n  return(\n  <div className=\"col-md-4 border\">\n    <img src={'https://codingapple1.github.io/shop/shoes' + (props.i+1) + '.jpg'} width=\"100%\"/>\n    <h4>{props.shoes.title}</h4>\n    <p>{props.shoes.content}</p>\n    <p><b>{props.shoes.price}</b></p>\n  </div>\n\n  );\n}\n\n\nfunction Loading(){\n  return(\n    <h3>로딩중...</h3>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {BrowserRouter} from 'react-router-dom'; //터미널에 설치후, router 설치\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <BrowserRouter> \n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}