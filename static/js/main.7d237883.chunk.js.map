{"version":3,"sources":["data.js","Detail.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Box","styled","div","BoxTitle","h6","props","shoesColor","TabContent","useEffect","스위치변경","tab","className","Alert","Info","재고","Detail","useState","alert","setAlert","tabChange","스위치","Timer","setTimeout","clearTimeout","history","useHistory","useParams","찾은상품","shoes","find","상품","src","width","inventory","onClick","inventory변경","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","timeout","connect","state","Table","striped","bordered","hover","map","a","i","name","quantity","color","Product","App","shoesData","changeShoes","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","style","maxHeight","navbarScroll","to","as","Form","FormControl","type","placeholder","aria-label","Button","exact","path","Carousel","alt","Caption","size","axios","get","then","result","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d237883.chunk.js","sourcesContent":["export default   \r\n[\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n  ] ","import React, { useEffect, useState } from 'react'; //component 파일 따로만들때 import react 태그 필수\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Nav} from 'react-bootstrap'; \r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport {CSSTransition} from \"react-transition-group\"; //애니메이션 트렌지션 효과 \r\n\r\n\r\n/**컴포넌트로 css스타일링 */\r\nlet Box = styled.div `padding: 20px;  text-align: center; margin: 0 auto;`;\r\nlet BoxTitle = styled.h6 `\r\nfont-size: 2rem; \r\ncolor: ${props=> props.shoesColor}\r\n`;\r\n\r\n\r\nfunction Detail(props){\r\n\r\n let [alert, setAlert] = useState(true);\r\n let [inputData, inputChange] = useState('');\r\n let [tab, tabChange] = useState(0);\r\n let [스위치, 스위치변경] = useState(false);\r\n\r\n \r\n  useEffect(()=>{ //hook기능 효과추가하는 기능\r\n   let Timer = setTimeout(()=>{ setAlert(false)}, 2000); //2초후에, 재고 알림창 사라지게\r\n   return ()=> { clearTimeout (Timer)} //타이머 해제시킴\r\n  }, [] ); //젤 마지막 빈칸 [] = 한번 로딩됬을때만 실행하기\r\n\r\n\r\n   let history = useHistory();  //방문기록등을 다 저장해놓는 object명\r\n   let { id } = useParams();\r\n   let 찾은상품 = props.shoes.find(function(상품){  //나중에 상품정렬 숫자가 바뀌어도, url경로가 뜨도록 find를쓴다 (아직 이부분 잘 이해안됨)  \r\n    /** 상품 => 상품.id == id */\r\n    return 상품.id == id   \r\n  });\r\n\r\n\r\n\r\n    return(\r\n\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Box>\r\n          <BoxTitle shoesColor={'blue'}>HOT SALES</BoxTitle>\r\n        </Box>\r\n\r\n     \r\n        {  alert === true ? <Alert/> : null }\r\n       \r\n\r\n        <div className=\"col-md-6\">\r\n          <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n          <p>{찾은상품.content}</p>\r\n          <p>{찾은상품.price}원</p>\r\n\r\n          <Info 재고={props.inventory}></Info>\r\n\r\n          <button className=\"btn btn-danger\" onClick={()=>{\r\n            //주문했을때 재고량에서 -1 빼서 보여지게 하기\r\n          props.inventory변경([9,10,11])\r\n          }}>주문하기</button> \r\n\r\n          <button className=\"btn btn-secondary\" onClick={()=>{\r\n              history.goBack();   //history 변수 만든후에, 뒤로가기 object를 입력하면 됨\r\n              {/**ex :  history.push('/경로명') => 특정경로url로 이동하기 가능 */}\r\n          }}>뒤로가기</button> \r\n        </div>\r\n      </div>\r\n\r\n\r\n<Nav variant=\"tabs\" defaultActiveKey=\"link-0\" className=\"mt-5\">\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-0\" onClick={()=>{\r\n      스위치변경(false); tabChange(0); //버튼을 누르면 스위치 변경이 false가됨\r\n    }}>1번</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-1\" onClick={()=>{  \r\n      스위치변경(false); tabChange(1); \r\n    }}>2번</Nav.Link>\r\n  </Nav.Item>\r\n</Nav>\r\n\r\n<CSSTransition in={스위치} className=\"wow\" timeout={500}>\r\n  <TabContent tab={tab} 스위치변경={스위치변경}></TabContent>\r\n</CSSTransition>\r\n   </div> \r\n\r\n  )\r\n}\r\n\r\nfunction TabContent(props){\r\n\r\n  useEffect(()=>{  //컴포넌트 로드게될때 스위치 true가되고\r\n    props.스위치변경(true);\r\n  })\r\n\r\n  if(props.tab === 0){\r\n    return  <div className=\"tab1\">내용1번</div> \r\n  }\r\n  else if(props.tab === 1){\r\n    return <div className=\"tab2\">내용2번입니다</div>\r\n }\r\n}\r\n\r\n\r\n\r\nfunction Alert(){\r\n  return(\r\n    <div className=\"my-alert-yellow\" >\r\n    <p>재고가 1개 남았습니다</p>\r\n  </div>\r\n  \r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Info(props){\r\n  return(\r\n   <p>현재 재고는 {props.재고[0]}개 남아있습니다</p>\r\n  )\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Cart(props){\r\n    return(\r\n<div>\r\n<Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>상품명</th>\r\n      <th>수량</th>\r\n      <th>변경</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {\r\n      props.state.map((a,i)=>{\r\n        return(\r\n          <tr key={i}>\r\n           <td>{a.name}</td>\r\n           <td>{a.quantity}</td>\r\n           <td>{a.color}</td>\r\n           <td><button onClick={()=>{}}>+</button></td>\r\n          </tr>\r\n        )\r\n      })\r\n    }\r\n\r\n  </tbody>\r\n</Table>\r\n</div>\r\n)\r\n}\r\n\r\n\r\n// index.js에 있는 파일의 let변수를 가져와서 props로 변환해주는 함수\r\nfunction stateChangeToProps(state){\r\n  return{\r\n    state : state    //store라는 변수를 state로 받아온다 -> state라는 이름의props로 바꿔달라는 요청\r\n  }\r\n}\r\n\r\n\r\nexport default connect(stateChangeToProps)(Cart); //1. export default Cart 대신씀 2. 위에다 connect 를 import해오기;                  ","\nimport React, { useState } from 'react'; \nimport {Navbar, Nav,Form,FormControl,Button,Carousel} from 'react-bootstrap';  //부트스트랩에서 사용할 태그  상단에 다 긁어와야 쓸수있음 \nimport './App.css';\nimport shoesData from './data.js'; //Json 형식의 데이터 파일 불러오기\nimport { Link, Route, Switch} from 'react-router-dom'; //라우팅 태그 불러오기\nimport axios from 'axios';  //Ajax파일 설치\nimport Detail from './Detail.js'; \nimport Cart from './Cart.js'\n\n\nfunction App() {\n\n  let [shoes, changeShoes] = useState(shoesData); //Json 형식의 데이터파일 쪼개서 불러오기, API쓴것 처럼 일일이 불러올수있다\n  //중요한 데이터들은 최상위 App() 컴포넌트 안에 보관하자!!\n\n  let [inventory, inventory변경] = useState([10,11,12]); //갯수 10, 11, 12 개 있다고 그냥 대충 만들기\n\n\n  return (\n<div className=\"App\">\n\n<Navbar bg=\"light\" expand=\"lg\">\n  <Navbar.Brand href=\"#\">LOGO</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"navbarScroll\" />\n  <Navbar.Collapse id=\"navbarScroll\">\n    <Nav\n      className=\"mr-auto my-2 my-lg-0\"\n      style={{ maxHeight: '100px' }}\n      navbarScroll>\n      <Nav.Link > <Link to=\"/\">HOME</Link> </Nav.Link> {/***link to=\"\" 라우터를 이용한 링크달기 */}\n      <Nav.Link as ={Link} to=\"/Detail\"> Detail </Nav.Link>\n    </Nav>\n    <Form className=\"d-flex\">\n      <FormControl\n        type=\"search\"\n        placeholder=\"Search\"\n        className=\"mr-2\"\n        aria-label=\"Search\"\n      />\n      <Button variant=\"outline-success\">Search</Button>\n    </Form>\n  </Navbar.Collapse>\n</Navbar>\n    \n\n\n\n<Switch> {/**router여러개 있을때 한페이지에 중복되지않고, 1개의 라우터만 보여준다 */}\n\n<Route exact path=\"/\"> \n{ //메인페이지 라우트\n/**메인페이지 해당하는 주소  단, extact 라는 걸 추가하면 정확한 주소가 일치해야지 페이지 뜬다 아니면 겹치는거 다 띄워버림*/}\n\n\n<Carousel>\n  <Carousel.Item className=\"bg\">\n    <img\n      className=\"d-block w-100\"\n      src=\"/feather.jpg\"\n      alt=\"1slide\"\n    />\n    \n    <Carousel.Caption>\n      <h3>1슬라이드</h3>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n      <Button variant=\"warning\" size=\"lg\">View More</Button>\n    </Carousel.Caption>\n  </Carousel.Item>\n\n  <Carousel.Item className=\"bg\">\n    <img\n      className=\"d-block w-100 bg\"\n      src=\"/sunset.jpg\"\n      alt=\"2slide\"\n    />\n\n    <Carousel.Caption>\n      <h3>2 슬라이드</h3>\n      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n      <Button variant=\"warning\" size=\"lg\">View More</Button>\n    </Carousel.Caption>\n  </Carousel.Item>\n</Carousel>\n\n\n<div className=\"container\">\n\n\n\n  <div className=\"row\">\n\n  \n{shoes.map((a,i)=>{  \n  /**1. 3개 컴포넌트 반복문 만들기 ; shoes의 array안의 모든 갯수만큼 map반복 */\n  /**2. map(a,i)에서 \n   * a의미 : shoes안에 있던 하나하나의 데이터 \n   * i의 의미 : 0,1,2,3... 무한으로 반복 숫자\n  */\n  return(\n    <Product shoes={shoes[i]} i={i} key={i}></Product> \n     /** * 즉, (a,i)는 shoes안의 하나하나 데이터를 무한으로 반복하라는 뜻 */\n     /**i를 넣은건 이미지 숫번데로 띠우기 위해 props를 만든것 */\n     /**반복문 만들떄 key={} 필수 */\n  );\n})}\n\n  </div>\n\n\n\n </div>\n\n<button className=\"btn btn-primary\" onClick={()=>{\n \n  //load === true ? <Loading></Loading> : null;\n\n  axios.get( 'https://codingapple1.github.io/shop/data2.json' )/**AJAX : 이안에 데이터 요청할 url이와야함 */\n  .then((result)=>{\n\n  \n    changeShoes( [...shoes, ...result.data] );  // [...000 ] array의 복사본, shoes라는 state에 자료 추가\n  })\n\n  .catch(()=>{ /**이 안에는 요청실패시 실행할코드 */ })\n\n}}>View More</button>\n\n</Route>\n\n\n\n{/**여기서는 디테일 페이지**/}\n<Route  path=\"/detail/:id\"> {/**:id는 콜론뒤에는 아무문자나 받겠다는 url작명법 */}\n{ /**경로뒤에 /detail 는 해당하는 주소 */}\n  <Detail shoes={shoes} inventory={inventory} inventory변경={inventory변경}  /**props를 쓴 자식요소에 넘겨주는중 */></Detail>\n</Route>\n\n\n\n\n<Route path='/cart'>\n  <Cart></Cart>\n</Route>\n\n\n\n\n\n</Switch>\n\n</div>\n  )\n}\n\n\n/**상품 컴포넌트 만들기 */\nfunction Product(props){\n  return(\n  <div className=\"col-md-4 border\">\n    <img src={'https://codingapple1.github.io/shop/shoes' + (props.i+1) + '.jpg'} width=\"100%\"/>\n    <h4>{props.shoes.title}</h4>\n    <p>{props.shoes.content}</p>\n    <p><b>{props.shoes.price}</b></p>\n  </div>\n\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'; //터미널에 설치후, router 설치\nimport {Provider} from 'react-redux';\nimport { createStore } from 'redux';\n\nlet store = createStore(()=>{ return[  // store란 변수에 state를 저장함\n  { color: 'yellow', name: 'skyblue', quantity: 2 },\n  { color: 'black', name: 'babybum', quantity: 1 }\n] \n/***state 초기값 만들고 아래 provider로 보내주기 */\n});\n\n\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <BrowserRouter> \n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}